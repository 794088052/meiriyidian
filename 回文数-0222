/**
 * 回文数
 * 判断一个整数是否是回文数。回文数是指正序（从左向右）和倒序（从右向左）读都是一样的整数。
 *
 * @author: lWX1017602
 * @since: 2021/2/22
 */
public class PalindromeNum {

    /**
     * 前提是数字为正整数，负数是不为回文数的
     * 1.先将数字转为字符串，然后就进行字符串数组双向遍历遍历，遍历一半都相等就是回文数
     * 2.直接进行数字对比,数字最高位和最低位对比
     * 3. 取出后半段数字进行翻转。然后与前半截来比较
     * @param num
     * @return
     */
    public static boolean isPalindromeNum(int num){
        String target = num + "";
        int left = 0;
        int right = target.length()-1;
        boolean flag = true;
        while (left <= target.length()/2){
            if (target.charAt(left)==target.charAt(right)){
                left++;
                right--;
            }else {
                flag=false;
                break;
            }
        }
        return flag;
    }

    public static boolean isPalindromeNum2(int num){
        int temp = num;
        int res = 0;
        while (temp/10!=0){
           res =(res + (temp % 10)) *10;
           temp = temp/10;
        }
        res = res +temp;
        return res==num;
    }


    public static void main(String[] args) {
        boolean palindromeNum2 = isPalindromeNum2(2134554312);
        System.out.println("palindromeNum2 = " + palindromeNum2);
    }

}
